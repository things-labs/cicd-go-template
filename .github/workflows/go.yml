name: Go
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: Build on GO ${{matrix.go-version}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        go-version: ["1.15.x", "1.16.x"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Set up Go ${{matrix.go-version}}
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.go-version}}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Go test osx linux
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        go test -v -benchmem -test.bench=".*" -coverprofile=coverage -covermode=atomic ./...

    - name: Go test windows
      if: matrix.os == 'windows-latest'
      run: |
        go test -v -race -coverprofile=coverage -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage
        flags: unittests
        verbose: true

    - name: Print Go environment
      id: vars
      run: |
        printf "Using go at: $(which go)\n"
        printf "Go version: $(go version)\n"
        printf "\n\nGo environment:\n\n"
        go env
        printf "\n\nSystem environment:\n\n"
        env
        # Calculate the short SHA1 hash of the git commit
        echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
        echo "::set-output name=go_cache::$(go env GOCACHE)"

    - name: Cache go modules
      uses: actions/cache@v2
      with:
        path: ${{ steps.vars.outputs.go_cache }}
        key: ${{ runner.os }}-${{ matrix.go-version }}-go-ci-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.go-version }}-go-ci